const moment = require("moment/moment");
const {ButtonBuilder, ButtonStyle, ActionRowBuilder} = require("discord.js");
const axios = require("axios");
const { apiKey, baseApi } = require('../config.json');

function ApiService() {}

ApiService.prototype.getLatestCVEs = async function() {

    const today = moment(new Date()).format("YYYY-MM-DDT00:00:00");
    const now = moment(new Date()).format("YYYY-MM-DDT23:59:59");

    const config = {
        headers: {
            apiKey: apiKey
        }
    };

    const response = await axios.get(baseApi + '?pubStartDate=' + today + '&pubEndDate=' + now + '&resultsPerPage=20&StartIndex=0', config)
        .then((response) => {
            let vulnerabilities = response.data.vulnerabilities;

            // Sorting of object by published date of vulnerability, and slice by 3 elements
            vulnerabilities = vulnerabilities.sort((a,b)=>
                a.published > b.published ? 1:-1
            ).sort((a,b)=> {
                if (a.published === b.published) {
                    return a.published - b.published;
                }
            }).slice(0,3);

            //Format the response of the discord bot
            let botResponse = '';
            const buttons= [];
            for (const vulnerability of vulnerabilities) {
                botResponse += "ðŸ”“ **" + vulnerability.cve.id + '**\n';
                botResponse += "Fecha: " + moment(vulnerability.cve.published).format('DD-MM-YYYY HH:mm:ss') + "\n\n";
                botResponse += vulnerability.cve.descriptions[1] != undefined ?
                    vulnerability.cve.descriptions[1].value + "\n\n" : vulnerability.cve.descriptions[0].value + "\n\n";
                const detail = new ButtonBuilder()
                    .setCustomId(vulnerability.cve.id)
                    .setLabel("MÃ¡s informaciÃ³n " + vulnerability.cve.id)
                    .setStyle(ButtonStyle.Primary);
                buttons.push(detail);
            }
            const row = new ActionRowBuilder().addComponents(buttons);

            return {
                content: botResponse,
                components: [row]
            };
        });
    return response;
};

module.exports = ApiService;