const { SlashCommandBuilder } = require("discord.js");
const { apiKey, baseApi } = require('../../config.json');
const {request} = require("node:http");
const moment = require("moment");
const axios = require("axios");

const today = moment(new Date()).format("YYYY-MM-DDT00:00:00");
const now = moment(new Date()).format("YYYY-MM-DDTHH:mm:ss");

module.exports = {
    data: new SlashCommandBuilder()
        .setName("latest")
        .setDescription("Replies with the latest 3 CVEs."),
    async execute(interaction) {
        //await interaction.reply("Pong!");
        axios.get(baseApi + '?pubStartDate=' + today + '&pubEndDate=' + now + '&resultsPerPage=20&StartIndex=0')
            .then((response) => {
                let vulnerabilities = response.data.vulnerabilities;
                vulnerabilities = vulnerabilities.sort((a,b)=>
                    a.published > b.published ? 1:-1
                ).sort((a,b)=> {
                    if (a.published === b.published) {
                        return a.published - b.published;
                    }
                }).slice(0,3);
                let botResponse = '';
                for (const vulnerability of vulnerabilities) {
                    botResponse += "**" + vulnerability.cve.id + '**\n';
                    botResponse += "Fecha: " + moment(vulnerability.cve.published).format('DD-MM-YYYY HH:mm:ss') + "\n\n";
                    botResponse += vulnerability.cve.descriptions[1] != undefined ?
                        vulnerability.cve.descriptions[1].value + "\n\n" : vulnerability.cve.descriptions[0].value + "\n\n";
                }
                interaction.reply(botResponse);
            }, (error) => {
                //TODO handle error
                console.log(error);
            });
    },
};